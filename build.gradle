buildscript {
	ext {
		springBootPluginVersion = "3.1.4"
		protobufPluginVersion = "0.9.4"
		mockitoVersion = "5.+"
		junitVersion = "5.7.0"
	}
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${project.ext.springBootPluginVersion}")
		classpath("com.google.protobuf:protobuf-gradle-plugin:${project.ext.protobufPluginVersion}")
	}
}

allprojects {
	group = "com.eat.eatplace"
	version = "0.0.1"

	ext {
		commonslang = "3.13.0"
		lombokVersion = "1.18.30"
		protobufVersion = "3.24.3"
		mariadbJavaClientVersion = "3.1.2"
		queryDslVersion = "5.0.0"
		jacksonVersion = "2.15.2"
		annotationsApiVersion = "6.0.53"
		grpcServerSpringBootStarterVersion = "2.15.0.RELEASE"
		grpcVersion = "1.58.0"
		guavaVsersion = "32.1.1-jre"
	}
}

subprojects {
	apply plugin: "org.springframework.boot"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "java-library"

	sourceCompatibility = "17"
	compileJava.options.encoding = 'UTF-8'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		// Lombok
		compileOnly("org.projectlombok:lombok:${lombokVersion}")
		annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
		testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
		testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

		// Spring Web
		implementation("org.springframework.boot:spring-boot-starter-web")

		// spring test
		testImplementation("org.springframework.boot:spring-boot-starter-test")

		// DevelopmentOnly
		developmentOnly("org.springframework.boot:spring-boot-devtools")

		//jackson
		implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
		implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
		implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")

		// Commons
		implementation("org.apache.commons:commons-lang3:${commonslang}")
	}

	test {
		useJUnitPlatform()
	}
}