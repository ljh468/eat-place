buildscript {
	ext {
		springBootVersion = '3.0.6'
		gsonVersion = "2.10.1"
//		slf4jVersion = "1.7.36"
		mockitoVersion = "5.+"
		junitVersion = "5.7.0"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

allprojects {
	group = "com.eatplace"
	version = "1.0.0"
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = '17'
	targetCompatibility = '17'
	compileJava.options.encoding = 'UTF-8'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		// Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		// spring
		testImplementation("org.springframework.boot:spring-boot-starter-test")

		// test
		testImplementation("org.mockito:mockito-core:${mockitoVersion}")
		// testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
		// testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

		// Commons
		implementation 'org.apache.commons:commons-lang3:3.12.0'
	}

	test {
		useJUnitPlatform()
	}
}

project(":eat-api") {
	dependencies {
		implementation project(":user-core")

		// web
		implementation("org.springframework.boot:spring-boot-starter-web")
		implementation("org.springframework.boot:spring-boot-devtools")
		// DB
//		runtimeOnly ("com.h2database:h2")
		// Data
		implementation("org.springframework.boot:spring-boot-starter-data-mongodb")

		// JPA
//		implementation ("org.springframework.boot:spring-boot-starter-data-jpa")
		// thymeleaf
		implementation ("org.springframework.boot:spring-boot-starter-thymeleaf")
		// configuration
		annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
		// security
		// gson
		implementation("com.google.code.gson:gson:${gsonVersion}")
		// test
		testCompileOnly("org.projectlombok:lombok")
		testAnnotationProcessor("org.projectlombok:lombok")
	}
}

project(":user-core") {
	dependencies {
		// db
//		runtimeOnly ("com.h2database:h2")
		implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
		// jpa
//		implementation ("org.springframework.boot:spring-boot-starter-data-jpa")
		// gson
		implementation("com.google.code.gson:gson:${gsonVersion}")

		// test
		testCompileOnly("org.projectlombok:lombok")
		testAnnotationProcessor("org.projectlombok:lombok")
	}
}